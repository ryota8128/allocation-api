<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.moneyAllocation.repository.mybatis.RegularTransferMapper">
    <resultMap id="RegularTransfer" type="com.example.moneyAllocation.domain.RegularTransfer">
        <id property="id" column="ID"/>
        <result property="fromAccount" column="FROM_ACCOUNT"/>
        <result property="toAccount" column="TO_ACCOUNT"/>
        <result property="description" column="DESCRIPTION"/>
        <result property="percentage" column="PERCENTAGE"/>
        <result property="amount" column="AMOUNT"/>
        <result property="ratio" column="RATIO"/>
        <result property="userId" column="USER_ID"/>
    </resultMap>

    <select id="find" resultMap="RegularTransfer">
        SELECT
        ID,
        FROM_ACCOUNT,
        TO_ACCOUNT,
        DESCRIPTION,
        PERCENTAGE,
        AMOUNT,
        RATIO,
        USER_ID
        FROM REGULAR_TRANSFER
        <where>
            USER_ID = #{userId}
        </where>
        ORDER BY ID;
    </select>

    <select id="findOne" resultMap="RegularTransfer">
        SELECT
        ID,
        FROM_ACCOUNT,
        TO_ACCOUNT,
        DESCRIPTION,
        PERCENTAGE,
        AMOUNT,
        RATIO,
        USER_ID
        FROM REGULAR_TRANSFER
        <where>
            ID = #{id}
            <if test="userId != null">
                AND USER_ID = #{userId}
            </if>
        </where>
    </select>

    <insert id="add" parameterType="com.example.moneyAllocation.domain.RegularTransfer" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO REGULAR_TRANSFER
        (
        from_account,
        to_account,
        description,
        percentage,
        amount,
        ratio,
        user_id
        )
        VALUES
        (
        #{fromAccount},
        #{toAccount},
        #{description},
        #{percentage},
        #{amount},
        #{ratio},
        #{userId}
        )
    </insert>

    <update id="set" parameterType="com.example.moneyAllocation.domain.RegularTransfer">
        UPDATE REGULAR_TRANSFER
        SET
        FROM_ACCOUNT = #{fromAccount},
        TO_ACCOUNT = #{toAccount},
        DESCRIPTION = #{description},
        PERCENTAGE = #{percentage},
        <if test="percentage">
            RATIO = #{ratio}
        </if>
        <if test="!percentage">
            AMOUNT = #{amount}
        </if>
        WHERE
        ID = #{id}
        AND USER_ID = #{userId}
    </update>

    <delete id="delete" parameterType="Long">
        DELETE FROM REGULAR_TRANSFER
        <where>
            ID = #{id}
            AND USER_ID = #{userId}
        </where>
    </delete>


    <update id="setNullAccount" parameterType="Long">
        UPDATE regular_transfer
        SET from_account = CASE
        WHEN from_account = #{accountId} THEN NULL
        ELSE from_account
        END,
        to_account = CASE
        WHEN to_account = #{accountId} THEN NULL
        ELSE to_account
        END
        WHERE from_account = #{accountId} OR to_account = #{accountId};
    </update>
</mapper>